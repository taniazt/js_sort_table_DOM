{"version":3,"sources":["scripts/main.js"],"names":["makeSortable","table","thead","querySelector","tbody","addEventListener","eventClick","th","target","closest","column","cellIndex","rows","children","textContent","sort","rowA","rowB","cells","localeCompare","convertSalary","row","appendChild","string","split","join","replace","document"],"mappings":";AAAA,aAkDA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAhDA,SAASA,EAAaC,GACdC,IAAAA,EAAQD,EAAME,cAAc,SAC5BC,EAAQH,EAAME,cAAc,SAElCD,EAAMG,iBAAiB,QAAS,SAACC,GACzBC,IAAAA,EAAKD,EAAWE,OAAOC,QAAQ,MAEjC,GAACF,EAAD,CAIEG,IAAAA,EAASH,EAAGI,UACZC,EAAWR,EAAAA,EAAMS,UAEfP,OAAAA,EAAWE,OAAOM,aAClB,IAAA,OACA,IAAA,WACJF,EAAKG,KAAK,SAACC,EAAMC,GACRD,OAAAA,EAAKE,MAAMR,GAAQI,YACvBK,cAAcF,EAAKC,MAAMR,GAAQI,eAEtC,MAEI,IAAA,MACJF,EAAKG,KAAK,SAACC,EAAMC,GACRD,OAAAA,EAAKE,MAAMR,GAAQI,YACtBG,EAAKC,MAAMR,GAAQI,cAEzB,MAEI,IAAA,SACJF,EAAKG,KAAK,SAACC,EAAMC,GACRG,OAAAA,EAAcJ,EAAKE,MAAMR,GAAQI,aACpCM,EAAcH,EAAKC,MAAMR,GAAQI,eAKzBF,IAlC4B,EAkC5BA,EAAAA,EAAAA,GAlC4B,IAkCtB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAbS,IAAAA,EAAa,EAAA,MACtBjB,EAAMkB,YAAYD,IAnC0B,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,QAwClD,SAASD,EAAcG,GACdA,OAAAA,EAAOC,MAAM,KAAKC,KAAK,IAAIC,QAAQ,IAAK,IAGjD1B,EACE2B,SAASxB,cAAc","file":"main.ca1f2917.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction makeSortable(table) {\n  const thead = table.querySelector('thead');\n  const tbody = table.querySelector('tbody');\n\n  thead.addEventListener('click', (eventClick) => {\n    const th = eventClick.target.closest('th');\n\n    if (!th) {\n      return;\n    }\n\n    const column = th.cellIndex;\n    const rows = [...tbody.children];\n\n    switch (eventClick.target.textContent) {\n      case ('Name'):\n      case ('Position'):\n        rows.sort((rowA, rowB) => {\n          return rowA.cells[column].textContent\n            .localeCompare(rowB.cells[column].textContent);\n        });\n        break;\n\n      case ('Age'):\n        rows.sort((rowA, rowB) => {\n          return rowA.cells[column].textContent\n            - rowB.cells[column].textContent;\n        });\n        break;\n\n      case ('Salary'):\n        rows.sort((rowA, rowB) => {\n          return convertSalary(rowA.cells[column].textContent)\n            - convertSalary(rowB.cells[column].textContent);\n        });\n        break;\n    }\n\n    for (const row of rows) {\n      tbody.appendChild(row);\n    }\n  });\n}\n\nfunction convertSalary(string) {\n  return string.split(',').join('').replace('$', '');\n}\n\nmakeSortable(\n  document.querySelector('table')\n);\n"]}